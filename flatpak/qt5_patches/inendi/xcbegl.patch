diff --git a/qtbase/src/plugins/platforms/xcb/gl_integrations/xcb_egl/qxcbeglintegration.cpp b/qtbase/src/plugins/platforms/xcb/gl_integrations/xcb_egl/qxcbeglintegration.cpp
index fe18bc2..8c85841 100644
--- a/qtbase/src/plugins/platforms/xcb/gl_integrations/xcb_egl/qxcbeglintegration.cpp
+++ b/qtbase/src/plugins/platforms/xcb/gl_integrations/xcb_egl/qxcbeglintegration.cpp
@@ -98,6 +98,16 @@ QXcbWindow *QXcbEglIntegration::createWindow(QWindow *window) const
 
 QPlatformOpenGLContext *QXcbEglIntegration::createPlatformOpenGLContext(QOpenGLContext *context) const
 {
+    if (!context->nativeHandle().isNull()) {
+        auto nativeHandle = context->nativeHandle().value<QEGLNativeContext>();
+        QXcbEglContext *platformContext = new QXcbEglContext(context->format(),
+                                                             context->shareHandle(),
+                                                             nativeHandle.display(),
+                                                             context->nativeHandle());
+        context->setNativeHandle(platformContext->nativeHandle());
+        return platformContext;
+    }
+
     QXcbScreen *screen = static_cast<QXcbScreen *>(context->screen()->handle());
     QXcbEglContext *platformContext = new QXcbEglContext(screen->surfaceFormatFor(context->format()),
                                                          context->shareHandle(),
@@ -109,6 +119,11 @@ QPlatformOpenGLContext *QXcbEglIntegration::createPlatformOpenGLContext(QOpenGLC
 
 QPlatformOffscreenSurface *QXcbEglIntegration::createPlatformOffscreenSurface(QOffscreenSurface *surface) const
 {
+    if (surface->nativeHandle() != nullptr) {
+        auto nativeHandle = static_cast<QEGLNativeContext*>(surface->nativeHandle());
+        return new QEGLPbuffer(nativeHandle->display(), surface->requestedFormat(), surface);
+    }
+
     QXcbScreen *screen = static_cast<QXcbScreen *>(surface->screen()->handle());
     return new QEGLPbuffer(eglDisplay(), screen->surfaceFormatFor(surface->requestedFormat()), surface);
 }
diff --git a/qtbase/src/widgets/kernel/qopenglwidget.cpp b/qtbase/src/widgets/kernel/qopenglwidget.cpp
index 374ea53..6e53f73 100644
--- a/qtbase/src/widgets/kernel/qopenglwidget.cpp
+++ b/qtbase/src/widgets/kernel/qopenglwidget.cpp
@@ -54,6 +54,9 @@
 #include <QtGui/private/qopenglpaintdevice_p.h>
 #include <QtGui/private/qopenglcontext_p.h>
 #include <QtWidgets/private/qwidget_p.h>
+#include <EGL/egl.h>
+#include <QtPlatformHeaders/QEGLNativeContext>
+#include <QDebug>
 
 QT_BEGIN_NAMESPACE
 
@@ -609,6 +612,7 @@ public:
     int requestedSamples;
     bool inPaintGL;
     GLenum textureFormat;
+    QVariant nativeContext;
 };
 
 void QOpenGLWidgetPaintDevicePrivate::beginPaint()
@@ -804,6 +808,7 @@ void QOpenGLWidgetPrivate::initialize()
 
     QScopedPointer<QOpenGLContext> ctx(new QOpenGLContext);
     ctx->setFormat(requestedFormat);
+    ctx->setNativeHandle(nativeContext);
     if (shareContext) {
         ctx->setShareContext(shareContext);
         ctx->setScreen(shareContext->screen());
@@ -836,6 +841,11 @@ void QOpenGLWidgetPrivate::initialize()
     surface = new QOffscreenSurface;
     surface->setFormat(ctx->format());
     surface->setScreen(ctx->screen());
+    if (!nativeContext.isNull()) {
+        QEGLNativeContext native = nativeContext.value<QEGLNativeContext>();
+        surface->setNativeHandle(new QEGLNativeContext(native.context(), native.display()));
+        qDebug() << "QOpenGLWidgetPrivate::initialize(): surface->setNativeHandle";
+    }
     surface->create();
 
     if (Q_UNLIKELY(!ctx->makeCurrent(surface))) {
@@ -1324,6 +1334,12 @@ QImage QOpenGLWidget::grabFramebuffer()
     return d->grabFramebuffer();
 }
 
+void QOpenGLWidget::setNativeContext(QVariant nativeContext)
+{
+    Q_D(QOpenGLWidget);
+    d->nativeContext = nativeContext;
+}
+
 /*!
   \internal
 */
diff --git a/qtbase/src/widgets/kernel/qopenglwidget.h b/qtbase/src/widgets/kernel/qopenglwidget.h
index 9eb4a9b..a31c4a6 100644
--- a/qtbase/src/widgets/kernel/qopenglwidget.h
+++ b/qtbase/src/widgets/kernel/qopenglwidget.h
@@ -85,6 +85,8 @@ public:
 
     QImage grabFramebuffer();
 
+    void setNativeContext(QVariant nativeContext);
+
 Q_SIGNALS:
     void aboutToCompose();
     void frameSwapped();
