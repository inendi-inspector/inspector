#include <pvkernel/core/PVClassLibrary.h>
#include <pvdisplays/PVDisplaysImpl.h>

PVDisplays::PVDisplaysImpl* PVDisplays::PVDisplaysImpl::_instance = nullptr;

static const char * plugins_get_displays_dir(void)
{
	const char *pluginsdir;

	pluginsdir = getenv("PICVIZ_DISPLAYS_DIR");
	if ( ! pluginsdir ) {
		pluginsdir = PICVIZ_DISPLAYS_DIR; /* Variable generated by CMAKE */
	}

	return pluginsdir;
}

PVDisplays::PVDisplaysImpl& PVDisplays::PVDisplaysImpl::get()
{
	if (_instance == nullptr) {
		_instance = new PVDisplaysImpl;
	}
	return *_instance;
}

void PVDisplays::PVDisplaysImpl::release()
{
	if (_instance) {
		delete _instance;
	}
}

void PVDisplays::PVDisplaysImpl::load_plugins()
{
	int ret = PVCore::PVClassLibraryLibLoader::load_class_from_dirs(QString(plugins_get_displays_dir()), "libdisplay");
	if (ret == 0) {
		PVLOG_WARN("No display plugins have been loaded !\n");
	}
	else {
		PVLOG_INFO("%d display plugins have been loaded.\n", ret);
	}
}

void PVDisplays::PVDisplaysImpl::static_init()
{
	visit_all_displays(	[](PVDisplayIf& obj) { obj.static_init(); } );
}

void PVDisplays::PVDisplaysImpl::static_release()
{
	visit_all_displays(	[](PVDisplayIf& obj) { obj.static_release(); } );
}
