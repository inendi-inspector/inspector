#
# \file CMakePackageDistribute.txt
#
# Copyright (C) Picviz Labs 2010-2012

install(FILES "pvconfig.ini" DESTINATION .)
install(FILES "gui-qt/src/resources/icon.png" DESTINATION .)
install(FILES "gui-qt/src/resources/picviz-inspector.ico" DESTINATION .)
install(FILES "CHANGELOG" DESTINATION .)

set(LINUX_QT5_PATH "/usr/lib/x86_64-linux-gnu")

set(QTLIBS_MAJOR "5")
set(QTLIBS_MINOR "3")
set(QTLIBS_PATCH "2")

if(${QT_WEBKIT})
	set(QTWEBKIT_MAJOR "5")
	set(QTWEBKIT_MINOR "3")
	set(QTWEBKIT_PATCH "2")
else(${QT_WEBKIT})
	set(QTWEBENGINE_MAJOR "5")
	set(QTWEBENGINE_MINOR "3")
	set(QTWEBENGINE_PATCH "2")
endif(${QT_WEBKIT})

set(LINUX_TBB_PATH "/opt/tbb-latest/lib")
set(TBB_MAJOR "2")

set(LINUX_BOOST_PATH "/usr/lib")
set(BOOST_PYTHON_VER "3.2mu")
set(BOOST_VER "1.49.0")

set(LINUX_MISCLIB_PATH "/usr/lib")
set(LINUX_MISCLIB_PATH_64 "/usr/lib/x86_64-linux-gnu")

set(LINUX_LIB_PATH "/lib")
set(LINUX_LIB_PATH_64 "/lib/x86_64-linux-gnu")

#
# QT libraries
#
install(FILES
	# QtBase
	${LINUX_QT5_PATH}/libQt5Concurrent.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Concurrent.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Concurrent.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5Core.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Core.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Core.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5Gui.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Gui.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Gui.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5Network.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Network.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Network.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5OpenGL.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5OpenGL.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5OpenGL.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5PrintSupport.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5PrintSupport.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5PrintSupport.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5Sql.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Sql.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Sql.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5Widgets.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Widgets.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Widgets.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5Xml.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Xml.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Xml.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	# QtDeclarative
	${LINUX_QT5_PATH}/libQt5Qml.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Qml.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Qml.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5Quick.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Quick.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Quick.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	DESTINATION .)

if(${QT_WEBKIT})
install(FILES
	${LINUX_QT5_PATH}/libQt5WebKit.so.${QTWEBKIT_MAJOR}  ${LINUX_QT5_PATH}/libQt5WebKit.so.${QTWEBKIT_MAJOR}.${QTWEBKIT_MINOR}
	${LINUX_QT5_PATH}/libQt5WebKit.so.${QTWEBKIT_MAJOR}.${QTWEBKIT_MINOR}.${QTWEBKIT_PATCH}
	${LINUX_QT5_PATH}/libQt5WebKitWidgets.so.${QTWEBKIT_MAJOR}  ${LINUX_QT5_PATH}/libQt5WebKitWidgets.so.${QTWEBKIT_MAJOR}.${QTWEBKIT_MINOR}
	${LINUX_QT5_PATH}/libQt5WebKitWidgets.so.${QTWEBKIT_MAJOR}.${QTWEBKIT_MINOR}.${QTWEBKIT_PATCH}
	DESTINATION .)
else(${QT_WEBKIT})
install(FILES
	${LINUX_QT5_PATH}/libQt5WebEngine.so.${QTWEBENGINE_MAJOR}  ${LINUX_QT5_PATH}/libQt5WebEngine.so.${QTWEBENGINE_MAJOR}.${QTWEBENGINE_MINOR}
	${LINUX_QT5_PATH}/libQt5WebEngine.so.${QTWEBENGINE_MAJOR}.${QTWEBENGINE_MINOR}.${QTWEBENGINE_PATCH}
	${LINUX_QT5_PATH}/libQt5WebEngineCore.so.${QTWEBENGINE_MAJOR}  ${LINUX_QT5_PATH}/libQt5WebEngineCore.so.${QTWEBENGINE_MAJOR}.${QTWEBENGINE_MINOR}
	${LINUX_QT5_PATH}/libQt5WebEngineCore.so.${QTWEBENGINE_MAJOR}.${QTWEBENGINE_MINOR}.${QTWEBENGINE_PATCH}
	${LINUX_QT5_PATH}/libQt5WebEngineWidgets.so.${QTWEBENGINE_MAJOR}  ${LINUX_QT5_PATH}/libQt5WebEngineWidgets.so.${QTWEBENGINE_MAJOR}.${QTWEBENGINE_MINOR}
	${LINUX_QT5_PATH}/libQt5WebEngineWidgets.so.${QTWEBENGINE_MAJOR}.${QTWEBENGINE_MINOR}.${QTWEBENGINE_PATCH}
	DESTINATION .)
endif(${QT_WEBKIT})

#
# TBB
#
install(FILES
	${LINUX_TBB_PATH}/libtbb.so.${TBB_MAJOR}
	${LINUX_TBB_PATH}/libtbbmalloc.so.${TBB_MAJOR}
	DESTINATION .)

#
# Boost
#
install(FILES
	${LINUX_BOOST_PATH}/libboost_date_time.so.${BOOST_VER}
	${LINUX_BOOST_PATH}/libboost_program_options.so.${BOOST_VER}
	${LINUX_BOOST_PATH}/libboost_python-py27.so.${BOOST_VER}
	${LINUX_BOOST_PATH}/libboost_system.so.${BOOST_VER}
	${LINUX_BOOST_PATH}/libboost_thread.so.${BOOST_VER}
	DESTINATION .)

install(FILES
	${LINUX_BOOST_PATH}/libpython${BOOST_PYTHON_VER}.so.1.0
	DESTINATION .)

#
# CUDA + NPP
#
install(FILES /opt/cuda/lib64/libcudart.so.5.0 /opt/cuda/lib64/libcudart.so.5.0.35 DESTINATION .)
install(FILES /opt/cuda/lib64/libnpp.so.5.0 /opt/cuda/lib64/libnpp.so.5.0.35 DESTINATION .)

#
# libraries from /usr/lib
#
install(FILES ${LINUX_MISCLIB_PATH}/libnuma.so.1 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH}/libhal.so.1 ${LINUX_MISCLIB_PATH}/libhal.so.1.0.0 DESTINATION .)

#
# libraries from /usr/lib/x86_64-linux-gnu
#
install(FILES ${LINUX_MISCLIB_PATH_64}/libarchive.so.12 ${LINUX_MISCLIB_PATH_64}/libarchive.so.12.0.4 DESTINATION .)
install(FILES ${CURL_LIBRARIES}.4 ${CURL_LIBRARIES}.4.3.0 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH_64}/libgomp.so.1 ${LINUX_MISCLIB_PATH_64}/libgomp.so.1.0.0 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH_64}/libhwloc.so.5 ${LINUX_MISCLIB_PATH_64}/libhwloc.so.5.0.1 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH_64}/libicudata.so.48 ${LINUX_MISCLIB_PATH_64}/libicudata.so.48.1.1 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH_64}/libicui18n.so.48 ${LINUX_MISCLIB_PATH_64}/libicui18n.so.48.1.1 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH_64}/libicuuc.so.48 ${LINUX_MISCLIB_PATH_64}/libicuuc.so.48.1.1 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH_64}/libnettle.so.4 ${LINUX_MISCLIB_PATH_64}/libnettle.so.4.3 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH_64}/libpcap.so.0.8 ${LINUX_MISCLIB_PATH_64}/libpcap.so.1.3.0 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH_64}/libpcrecpp.so.0 ${LINUX_MISCLIB_PATH_64}/libpcrecpp.so.0.0.0 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH_64}/libssh2.so.1 ${LINUX_MISCLIB_PATH_64}/libssh2.so.1.0.1 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH_64}/libxslt.so.1 ${LINUX_MISCLIB_PATH_64}/libxslt.so.1.1.26 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH_64}/librtmp.so.0 DESTINATION .)
install(FILES ${LINUX_MISCLIB_PATH_64}/libwebp.so.2 ${LINUX_MISCLIB_PATH_64}/libwebp.so.2.0.0 DESTINATION .)

#
# QueryBuilder
#
install(DIRECTORY ${picviz-inspector_SOURCE_DIR}/libpvkernel/src/widgets/querybuilder DESTINATION .)

# doc
if(DOC_ROOT_DIR)
	message(STATUS "Documentation directory: " ${DOC_ROOT_DIR})
	install(DIRECTORY ${DOC_ROOT_DIR}/ DESTINATION "docs")
endif(DOC_ROOT_DIR)
