#
# @file
#
# @copyright (C) Picviz Labs 2010-March 2015
# @copyright (C) ESI Group INENDI April 2015-2015

###############################################################################
# Define installation path.
###############################################################################
# FIXME : We have to use CMAKE_INSTALL_PREFIX to have correct absolute path on plugins
# but it will make cpack use this same path so we should not generate .deb file with
# this variable set.

SET(SHARE_RESSOURCES "${CMAKE_INSTALL_PREFIX}/share/inendi/inspector")
SET(INENDI_CONFIG ${SHARE_RESSOURCES})
SET(CUSTOM_QT_PATH "${CMAKE_INSTALL_PREFIX}/lib/inendi-inspector/qt")
SET(CUSTOM_TBB_PATH "${CMAKE_INSTALL_PREFIX}/lib/inendi-inspector/tbb")
SET(PVKERNEL_PLUGIN "${CMAKE_INSTALL_PREFIX}/lib/inendi-inspector/plugins")
SET(INENDI_PLUGIN "${CMAKE_INSTALL_PREFIX}/lib/inendi-inspector/plugins")

# Set rpath for custom Qt and TBB
set(CMAKE_INSTALL_RPATH "${CUSTOM_QT_PATH}:${CUSTOM_TBB_PATH}")
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

add_definitions(-DINENDI_CONFIG="${INENDI_CONFIG}")

###############################################################################
# Define files to install
###############################################################################

install(FILES "pvconfig.ini" DESTINATION ${INENDI_CONFIG})
install(FILES "gui-qt/src/resources/icon.png" DESTINATION ${SHARE_RESSOURCES})
install(FILES "gui-qt/src/resources/inendi-inspector.ico" DESTINATION ${SHARE_RESSOURCES})
install(FILES "CHANGELOG" DESTINATION ${SHARE_RESSOURCES})

set(LINUX_QT5_PATH "/usr/lib/x86_64-linux-gnu")

set(QTLIBS_MAJOR "5")
set(QTLIBS_MINOR "3")
set(QTLIBS_PATCH "2")

if(NOT ${QT_WEBKIT})
	set(QTWEBENGINE_MAJOR "5")
	set(QTWEBENGINE_MINOR "3")
	set(QTWEBENGINE_PATCH "2")
endif(NOT ${QT_WEBKIT})

set(LINUX_TBB_PATH "/opt/tbb-latest/lib/intel64/gcc4.4/")
set(TBB_MAJOR "2")

set(LINUX_BOOST_PATH "/usr/lib/x86_64-linux-gnu")
set(BOOST_PYTHON_VER "3.2mu")
set(BOOST_VER "1.55.0")

set(LINUX_MISCLIB_PATH_64 "/usr/lib/x86_64-linux-gnu")

set(LINUX_LIB_PATH_64 "/lib/x86_64-linux-gnu")

#
# QT libraries
#
install(FILES
	# QtBase
	${LINUX_QT5_PATH}/libQt5Concurrent.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Concurrent.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Concurrent.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5Core.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Core.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Core.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5Gui.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Gui.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Gui.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5OpenGL.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5OpenGL.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5OpenGL.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5PrintSupport.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5PrintSupport.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5PrintSupport.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5Sql.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Sql.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Sql.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5Widgets.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Widgets.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Widgets.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	${LINUX_QT5_PATH}/libQt5Xml.so.${QTLIBS_MAJOR} ${LINUX_QT5_PATH}/libQt5Xml.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
	${LINUX_QT5_PATH}/libQt5Xml.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}
	DESTINATION ${CUSTOM_QT_PATH})

if(NOT ${QT_WEBKIT})
install(FILES
	${LINUX_QT5_PATH}/libQt5WebEngine.so.${QTWEBENGINE_MAJOR}  ${LINUX_QT5_PATH}/libQt5WebEngine.so.${QTWEBENGINE_MAJOR}.${QTWEBENGINE_MINOR}
	${LINUX_QT5_PATH}/libQt5WebEngine.so.${QTWEBENGINE_MAJOR}.${QTWEBENGINE_MINOR}.${QTWEBENGINE_PATCH}
	${LINUX_QT5_PATH}/libQt5WebEngineCore.so.${QTWEBENGINE_MAJOR}  ${LINUX_QT5_PATH}/libQt5WebEngineCore.so.${QTWEBENGINE_MAJOR}.${QTWEBENGINE_MINOR}
	${LINUX_QT5_PATH}/libQt5WebEngineCore.so.${QTWEBENGINE_MAJOR}.${QTWEBENGINE_MINOR}.${QTWEBENGINE_PATCH}
	${LINUX_QT5_PATH}/libQt5WebEngineWidgets.so.${QTWEBENGINE_MAJOR}  ${LINUX_QT5_PATH}/libQt5WebEngineWidgets.so.${QTWEBENGINE_MAJOR}.${QTWEBENGINE_MINOR}
	${LINUX_QT5_PATH}/libQt5WebEngineWidgets.so.${QTWEBENGINE_MAJOR}.${QTWEBENGINE_MINOR}.${QTWEBENGINE_PATCH}
	DESTINATION ${CUSTOM_QT_PATH})
endif(NOT ${QT_WEBKIT})

#
# TBB
#
install(FILES
	${LINUX_TBB_PATH}/libtbb.so.${TBB_MAJOR}
	${LINUX_TBB_PATH}/libtbbmalloc.so.${TBB_MAJOR}
	DESTINATION ${CUSTOM_TBB_PATH})

# doc 
if(DOC_ROOT_DIR)
	message(STATUS "Documentation directory: " ${DOC_ROOT_DIR})
	install(DIRECTORY ${DOC_ROOT_DIR}/ DESTINATION ${CMAKE_INSTALL_PREFIX}/share/doc/inendi-inspector)
endif(DOC_ROOT_DIR)
add_definitions(-DDOC_PATH="${CMAKE_INSTALL_PREFIX}/share/doc/inendi-inspector")
