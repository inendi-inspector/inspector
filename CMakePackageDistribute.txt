#
# \file CMakePackageDistribute.txt
#
# Copyright (C) Picviz Labs 2010-2012

install(FILES "pvconfig.ini" DESTINATION .)
install(FILES "gui-qt/src/resources/icon.png" DESTINATION .)
install(FILES "gui-qt/src/resources/picviz-inspector.ico" DESTINATION .)
install(FILES "CHANGELOG" DESTINATION .)

set(WIN_TBB_PATH "C:\\\\dev\\\\tbb\\\\bin\\\\intel64\\\\vc9")
set(WIN_QT4_PATH "C:\\\\dev\\\\qt\\\\src\\\\qt-everywhere-opensource-src-4.7.3\\\\bin")
set(WIN_CURL_PATH "C:\\\\dev\\\\curl")
set(WIN_ICU_PATH "c:\\\\dev\\\\icu-amd64\\\\bin64")
set(WIN_BOOST_PATH "c:\\\\dev\\\\boost\\\\install-root\\\\lib")

set(LINUX_QT4_PATH "/usr/lib/x86_64-linux-gnu")

set(QTLIBS_MAJOR "4")
set(QTLIBS_MINOR "8")
set(QTLIBS_PATCH "4")
set(QTWEBKIT_MAJOR "4")
set(QTWEBKIT_MINOR "9")
set(QTWEBKIT_PATCH "0")

set(LINUX_TBB_PATH "/opt/tbb-latest/lib")
set(TBB_MAJOR "2")

set(LINUX_BOOST_PATH "/usr/lib")
set(BOOST_PYTHON_VER "3.2mu")
set(BOOST_VER "1.49.0")

set(LINUX_MISCLIB_PATH "/usr/lib")
set(LINUX_MISCLIB_PATH_64 "/usr/lib/x86_64-linux-gnu")

set(LINUX_LIB_PATH "/lib")
set(LINUX_LIB_PATH_64 "/lib/x86_64-linux-gnu")

if(WIN32)
	set(TBB_DIST_FILES
		${WIN_TBB_PATH}\\\\tbb.dll
		${WIN_TBB_PATH}\\\\tbbmalloc.dll
	)
	install(FILES ${TBB_DIST_FILES} DESTINATION .)

	set(QT4_DIST_FILES
	${WIN_QT4_PATH}\\\\phonon4.dll
	${WIN_QT4_PATH}\\\\QtCore4.dll
	${WIN_QT4_PATH}\\\\QtGui4.dll
	${WIN_QT4_PATH}\\\\QtMultimedia4.dll
	${WIN_QT4_PATH}\\\\QtNetwork4.dll
	${WIN_QT4_PATH}\\\\QtOpenGL4.dll
	${WIN_QT4_PATH}\\\\QtScript4.dll
	${WIN_QT4_PATH}\\\\QtSql4.dll
	${WIN_QT4_PATH}\\\\QtSvg4.dll
	${WIN_QT4_PATH}\\\\QtWebKit4.dll
	${WIN_QT4_PATH}\\\\QtXml4.dll
	${WIN_QT4_PATH}\\\\QtXmlPatterns4.dll
	#C:\\\\Qt\\\\4.7.3\\\\plugins\\\\sqldrivers\\\\qsqlite4.dll
	#C:\\\\Qt\\\\4.7.3\\\\plugins\\\\sqldrivers\\\\qsqlodbc4.dll
	)
	install(FILES ${QT4_DIST_FILES} ${INSPECTOR_ICON} DESTINATION .)

	set(CURL_DIST_FILES
	${WIN_CURL_PATH}\\\\curllib.dll
	${WIN_CURL_PATH}\\\\libeay32.dll
	${WIN_CURL_PATH}\\\\openldap.dll
	${WIN_CURL_PATH}\\\\ssleay32.dll
	)
	install(FILES ${CURL_DIST_FILES} DESTINATION .)
	
	set(FREEGLUT_DIST_FILES
	C:\\\\dev\\\\freeglut\\\\freeglut.dll
	)
	install(FILES ${FREEGLUT_DIST_FILES} DESTINATION .)

	set(FREETYPE_DIST_FILES
	C:\\\\dev\\\\freetype-amd64\\\\lib\\\\freetype.dll
	)
	install(FILES ${FREETYPE_DIST_FILES} DESTINATION .)	

	#set(PCRE_DIST_FILES
	#C:\\\\dev\\\\GnuWin32\\\\bin\\\\pcre3.dll
	#C:\\\\dev\\\\GnuWin32\\\\bin\\\\pcreposix3.dll
	#)
	#install(FILES ${PCRE_DIST_FILES} DESTINATION .)		

	#set(ZLIB_DIST_FILES
	#C:\\\\dev\\\\zlib-amd64\\\\bin\\\\zlib1.dll
	#)
	#install(FILES ${ZLIB_DIST_FILES} DESTINATION .)	

	set(ICU_DIST_FILES
	${WIN_ICU_PATH}\\\\icudt44.dll
	${WIN_ICU_PATH}\\\\icuio44.dll
	${WIN_ICU_PATH}\\\\iculx44.dll
	${WIN_ICU_PATH}\\\\icule44.dll
	${WIN_ICU_PATH}\\\\icutu44.dll
	${WIN_ICU_PATH}\\\\icuin44.dll
	${WIN_ICU_PATH}\\\\icuuc44.dll
	)
	install(FILES ${ICU_DIST_FILES} DESTINATION .)
	
	set(BOOST_DIST_FILES
	${WIN_BOOST_PATH}\\\\boost_thread-vc90-mt-1_48.dll
	${WIN_BOOST_PATH}\\\\boost_system-vc90-mt-1_48.dll
	${WIN_BOOST_PATH}\\\\boost_date_time-vc90-mt-1_48.dll
	${WIN_BOOST_PATH}\\\\boost_python3-vc90-mt-1_48.dll
	${WIN_BOOST_PATH}\\\\boost_program-options-vc90-mt-1_48.dll
	)
	install(FILES ${BOOST_DIST_FILES} DESTINATION .)
	
	set(REDIST_FILES
	${picviz-inspector_SOURCE_DIR}/third-party/vcredist_x64.exe
	${picviz-inspector_SOURCE_DIR}/third-party/openmp_release.msi
	${picviz-inspector_SOURCE_DIR}/third-party/WinPcap_4_1_2.exe
	${picviz-inspector_SOURCE_DIR}/third-party/python-3.2.2.amd64.msi
	)
	install(FILES ${REDIST_FILES} DESTINATION redist)
	
else(WIN32)
	#
	# QT Library
	# 
	install(FILES 

		${LINUX_QT4_PATH}/libQtScript.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtScript.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR} 
		${LINUX_QT4_PATH}/libQtScript.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH} 
		${LINUX_QT4_PATH}/libQtCore.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtCore.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR} 
		${LINUX_QT4_PATH}/libQtCore.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH} 
		${LINUX_QT4_PATH}/libQtDBus.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtDBus.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR} 
		${LINUX_QT4_PATH}/libQtDBus.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH} 
		${LINUX_QT4_PATH}/libQtDeclarative.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtDeclarative.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR} 
		${LINUX_QT4_PATH}/libQtDeclarative.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH} 
		${LINUX_QT4_PATH}/libQtDesigner.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtDesigner.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}
		${LINUX_QT4_PATH}/libQtDesigner.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH} 
		${LINUX_QT4_PATH}/libQtGui.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtGui.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR} 
		${LINUX_QT4_PATH}/libQtGui.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH} 
		${LINUX_QT4_PATH}/libQtHelp.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtHelp.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR} 
		${LINUX_QT4_PATH}/libQtHelp.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH} 
		${LINUX_QT4_PATH}/libQtNetwork.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtNetwork.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR} 
		${LINUX_QT4_PATH}/libQtNetwork.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH} 
		${LINUX_QT4_PATH}/libQtOpenGL.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtOpenGL.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR} 
		${LINUX_QT4_PATH}/libQtOpenGL.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH} 
		${LINUX_QT4_PATH}/libQtSql.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtSql.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR} 
		${LINUX_QT4_PATH}/libQtSql.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH} 
		${LINUX_QT4_PATH}/libQtXmlPatterns.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtXmlPatterns.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR} 
		${LINUX_QT4_PATH}/libQtXmlPatterns.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH} 
		${LINUX_QT4_PATH}/libQtXml.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtXml.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR} 
		${LINUX_QT4_PATH}/libQtXml.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH} 
		${LINUX_QT4_PATH}/libQtWebKit.so.${QTWEBKIT_MAJOR}  ${LINUX_QT4_PATH}/libQtWebKit.so.${QTWEBKIT_MAJOR}.${QTWEBKIT_MINOR}  
		${LINUX_QT4_PATH}/libQtWebKit.so.${QTWEBKIT_MAJOR}.${QTWEBKIT_MINOR}.${QTWEBKIT_PATCH} 
		${LINUX_QT4_PATH}/libQtCLucene.so.${QTLIBS_MAJOR} ${LINUX_QT4_PATH}/libQtCLucene.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR} ${LINUX_QT4_PATH}/libQtCLucene.so.${QTLIBS_MAJOR}.${QTLIBS_MINOR}.${QTLIBS_PATCH}

		DESTINATION .)


	#
	# TBB
	#
	install(FILES 

		${LINUX_TBB_PATH}/libtbb.so.${TBB_MAJOR} 
		${LINUX_TBB_PATH}/libtbbmalloc.so.${TBB_MAJOR} 
		${LINUX_TBB_PATH}/libtbbmalloc_proxy.so.${TBB_MAJOR} 

		DESTINATION .)

	#
	# Boost
	#
	install(FILES 

		${LINUX_BOOST_PATH}/libboost_thread.so.${BOOST_VER} 
		${LINUX_BOOST_PATH}/libboost_system.so.${BOOST_VER} 
		${LINUX_BOOST_PATH}/libboost_date_time.so.${BOOST_VER} 
		${LINUX_BOOST_PATH}/libboost_program_options.so.${BOOST_VER} 
		${LINUX_BOOST_PATH}/libpython${BOOST_PYTHON_VER}.so 
		${LINUX_BOOST_PATH}/libpython${BOOST_PYTHON_VER}.so.1 
		${LINUX_BOOST_PATH}/libpython${BOOST_PYTHON_VER}.so.1.0 
		${LINUX_BOOST_PATH}/libboost_python-py27.so 
		${LINUX_BOOST_PATH}/libboost_python-py27.so.${BOOST_VER} 

		DESTINATION .)


	install(FILES ${LINUX_MISCLIB_PATH_64}/libpcrecpp.so ${LINUX_MISCLIB_PATH_64}/libpcrecpp.so.0 ${LINUX_MISCLIB_PATH_64}/libpcrecpp.so.0.0.0 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libgomp.so.1 ${LINUX_MISCLIB_PATH_64}/libgomp.so.1.0.0 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libpcap.so.0.8 ${LINUX_MISCLIB_PATH_64}/libpcap.so.1.3.0 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libarchive.so.12 ${LINUX_MISCLIB_PATH_64}/libarchive.so.12.0.4 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libglut.so.3 ${LINUX_MISCLIB_PATH_64}/libglut.so.3.9.0 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libfreetype.so.6 ${LINUX_MISCLIB_PATH_64}/libfreetype.so.6.8.1 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libicui18n.so.48 ${LINUX_MISCLIB_PATH_64}/libicui18n.so.48.1.1 ${LINUX_MISCLIB_PATH_64}/libicuuc.so.48 ${LINUX_MISCLIB_PATH_64}/libicuuc.so.48.1.1 ${LINUX_MISCLIB_PATH_64}/libicudata.so.48 ${LINUX_MISCLIB_PATH_64}/libicudata.so.48.1.1 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libGLEW.so  ${LINUX_MISCLIB_PATH_64}/libGLEW.so.1.7 ${LINUX_MISCLIB_PATH_64}/libGLEW.so.1.7.0 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libaudio.so.2  ${LINUX_MISCLIB_PATH_64}/libaudio.so.2.4 DESTINATION .)
	#install(FILES /opt/curl/lib/libcurl.so.4 /opt/curl/lib/libcurl.so.4.2.0 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libssh2.so.1 ${LINUX_MISCLIB_PATH_64}/libssh2.so.1.0.1 DESTINATION .)
	install(FILES /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.17 DESTINATION .)
	install(FILES ${LINUX_LIB_PATH_64}/liblzma.so.5  ${LINUX_LIB_PATH_64}/liblzma.so.5.0.0 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libcrypto.so  ${LINUX_MISCLIB_PATH_64}/libcrypto.so.1.0.0 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libssl.so  ${LINUX_MISCLIB_PATH_64}/libssl.so.1.0.0 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libffi.so.5  ${LINUX_MISCLIB_PATH_64}/libffi.so.5.0.10 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libnettle.so.4 ${LINUX_MISCLIB_PATH_64}/libnettle.so.4.3 DESTINATION .)
	install(FILES ${LINUX_MISCLIB_PATH_64}/libhwloc.so ${LINUX_MISCLIB_PATH_64}/libhwloc.so.5 ${LINUX_MISCLIB_PATH_64}/libhwloc.so.5.0.1 DESTINATION .)
	install(FILES /usr/local/lib/libgzstream.so /usr/local/lib/libftgl.so /usr/local/lib/libtulip-3.8.so /usr/local/lib/libtulip-ogdf-3.8.so /usr/local/lib/libtulip-ogl-3.8.so /usr/local/lib/libtulip-qt4-3.8.so DESTINATION libtulip/lib)
	install(DIRECTORY /usr/local/share/tulip/bitmaps DESTINATION libtulip/share/tulip)
	install(FILES ${LINUX_MISCLIB_PATH}/libnuma.so ${LINUX_MISCLIB_PATH}/libnuma.so.1 DESTINATION .)

	#
	# CUDA + NPP
	#
	install(FILES /opt/cuda/lib64/libcudart.so /opt/cuda/lib64/libcudart.so.5.0 /opt/cuda/lib64/libcudart.so.5.0.35 /opt/cuda/lib64/libnpp.so /opt/cuda/lib64/libnpp.so.5.0 /opt/cuda/lib64/libnpp.so.5.0.35 DESTINATION .)

	# doc
	if(DOC_REFMAN_HTML_DIR)
		message(STATUS "Reference Manual: single HTML source directory: " ${DOC_REFMAN_HTML_DIR})
		install(DIRECTORY ${DOC_REFMAN_HTML_DIR}/ DESTINATION "manual/Reference Manual")
	endif(DOC_REFMAN_HTML_DIR)

	if(DOC_REFMAN_PDF_FILE)
		message(STATUS "Reference Manual: watermarked PDF file: " ${DOC_REFMAN_PDF_FILE})
		install(FILES ${DOC_REFMAN_PDF_FILE} DESTINATION manual RENAME "Reference Manual.pdf")
	endif(DOC_REFMAN_PDF_FILE)
endif(WIN32)
