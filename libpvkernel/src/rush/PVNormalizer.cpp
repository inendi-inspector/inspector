/**
 * \file PVNormalizer.cpp
 *
 * Copyright (C) Picviz Labs 2010-2012
 */

#include <QLibrary>
#include <QList>
#include <QString>
#include <QStringList>
#include <QRegExp>
#include <QHashIterator>
#include <QHash>
#include <QDir>


#include <stdlib.h>

#include <pvkernel/core/general.h>
#include <pvkernel/core/debug.h>

#include <pvkernel/rush/PVNormalizer.h>

/******************************************************************************
 *
 * PVRush::normalize_get_plugins_dirs
 *
 *****************************************************************************/
QStringList PVRush::normalize_get_plugins_dirs()
{
	QString pluginsdirs;
	QStringList pluginsdirs_list; 

	pluginsdirs = QString(getenv("PVRUSH_NORMALIZE_DIR"));
	if (pluginsdirs.isEmpty()) {
		pluginsdirs = QString(PVRUSH_NORMALIZE_DIR);
	}

	pluginsdirs_list = pluginsdirs.split(PVCORE_DIRECTORY_SEP);
	
	return pluginsdirs_list;
}

/******************************************************************************
 *
 * PVRush::normalize_get_helpers_plugins_dirs
 *
 *****************************************************************************/
QStringList PVRush::normalize_get_helpers_plugins_dirs(QString helper)
{
	QString pluginsdirs; 
	QStringList pluginsdirs_list;
	QDir dir;
	int counter;


	pluginsdirs = QString(getenv("PVRUSH_NORMALIZE_HELPERS_DIR"));
	if (pluginsdirs.isEmpty()) {
		pluginsdirs = QString(PVRUSH_NORMALIZE_HELPERS_DIR); /* Variable generated by CMAKE */
	}

	pluginsdirs_list = pluginsdirs.split(PVCORE_DIRECTORY_SEP);
	for (counter=0; counter < pluginsdirs_list.count(); counter++) {
		pluginsdirs_list[counter] = pluginsdirs_list[counter] + dir.separator() + helper + dir.separator();
	}

	return pluginsdirs_list;
}
